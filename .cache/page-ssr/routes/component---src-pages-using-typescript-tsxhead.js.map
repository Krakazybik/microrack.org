{"version":3,"file":"component---src-pages-using-typescript-tsxhead.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = () => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-lg)`,\n        textDecoration: `none`,\n      }}\n    >\n      μ<b>R</b> \n    </Link>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          microRack © 2019 – {new Date().getFullYear()}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description || '';\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","location","pathname","site","buildTime","href","to","Head","title","query","Header","margin","padding","display","alignItems","justifyContent","fontSize","textDecoration","children","siteMetadata","maxWidth","marginTop","Date","getFullYear","description","metaDescription","defaultTitle","author"],"sourceRoot":""}